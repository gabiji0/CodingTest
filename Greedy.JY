#구명보트

from collections import deque
def solution(people, limit):
    people.sort()
    q=deque(people)
    answer = len(q)
    while len(q) >1:
        if q[0] +q[-1] <= limit:
            q.pop()
            q.popleft()
            answer -=1
        else:
            q.pop()
    return answer
    
    
    
#큰수 만들기

def solution(number, k):
    collected = []

    for (i, num) in enumerate(number):
        while collected and collected[-1] < num and k > 0: 
            collected.pop()
            k -= 1
        
        if k == 0:
            collected += number[i:]
            break

        collected.append(num)

    collected = collected[:-k] if k > 0 else collected
    answer = "".join(collected)
    return answer
    
    
    
#체육복
def solution(n, lost, reserve):    
    answer = 0
    
    set_reserve = set(reserve) - set(lost)
    set_lost = set(lost) - set(reserve)
    
    for i in set_reserve:
        if i-1 in set_lost:
            set_lost.remove(i-1)
        elif i+1 in set_lost:
            set_lost.remove(i+1)
            
    return n-len(set_lost)
    
    
    
    
#조이스틱
   def solution(name):
    make_name = [min(ord(i) - ord('A'), ord('Z') - ord(i)+1) for i in name]
    idx, answer = 0, 0
    while True:
        answer += make_name[idx]
        make_name[idx] = 0
        if sum(make_name) == 0:
            break
        left, right = 1, 1
        while make_name[idx - left] == 0:
            left += 1
        while make_name[idx + right] == 0:
            right += 1
        answer += left if left < right else right
        idx += -left if left < right else right
    return answer 
